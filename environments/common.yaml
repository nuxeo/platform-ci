podTemplates:
  imagePullSecrets:
  - name: "kubernetes-docker-cfg"
  serviceAccount: "jenkins-operator-master"
  containers:
  - args: "^${computer.jnlpmac} ^${computer.name}"
    command: ""
    image: "jenkinsci/jnlp-slave:4.3-1"
    name: "jnlp"
    resourceRequestCpu: "100m"
    resourceRequestMemory: "128Mi"
    workingDir: "/home/jenkins"
  envVars:
  - containerEnvVar:
      key: "DOCKER_CONFIG"
      value: "/home/jenkins/.docker/"
  - containerEnvVar:
      key: "GIT_AUTHOR_EMAIL"
      value: "platform+jx-bot@nuxeo.com"
  - containerEnvVar:
      key: "GIT_AUTHOR_NAME"
      value: "nuxeo-platform-jx-bot"
  - containerEnvVar:
      key: "GIT_COMMITTER_EMAIL"
      value: "platform+jx-bot@nuxeo.com"
  - containerEnvVar:
      key: "GIT_COMMITTER_NAME"
      value: "nuxeo-platform-jx-bot"
  - containerEnvVar:
      key: "XDG_CONFIG_HOME"
      value: "/home/jenkins"
  volumes:
  - hostPathVolume:
      hostPath: "/var/run/docker.sock"
      mountPath: "/var/run/docker.sock"
  - secretVolume:
      mountPath: "/home/jenkins/.docker"
      secretName: "jenkins-docker-cfg"
  nodeSelector: "team=platform"
  yamlMergeStrategy: "override"
  yaml: |-
    apiVersion: v1
    kind: Pod
    spec:
      tolerations:
      - key: team
        operator: Equal
        value: platform
        effect: NoSchedule
jobs:
  traits:
    gitHubBranchDiscovery: |-
      // Discover branches
      gitHubBranchDiscovery {
        // Strategy: Exclude branches that are also filed as PRs
        strategyId(1)
      }
    gitHubPullRequestDiscovery: |-
      // Discover pull requests from origin
      gitHubPullRequestDiscovery {
        // Strategy: The current pull request revision
        strategyId(2)
      }
    disableStatusUpdateTrait: |-
      // Disable GitHub Notifications
      disableStatusUpdateTrait()
  strategy: |-
    // Property strategy
    strategy {
      // All branches get the same properties
      allBranchesSame {
        props {
          // Suppress automatic SCM triggering
          suppressAutomaticTriggering()
        }
      }
    }
  orphanedItemStrategy: |-
    // Orphaned Item Strategy
    orphanedItemStrategy {
      // Discard old items
      discardOldItems {
      }
    }