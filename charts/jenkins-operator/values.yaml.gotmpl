operator:
  tolerations:
    - key: team
      operator: Equal
      value: platform
      effect: NoSchedule
  nodeSelector:
    team: platform
jenkins:
  namespace: {{ .Values.namespace }}
  name: master
  labels:
    app.kubernetes.io/name: jenkins-master
    helm.sh/chart: jenkins-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: {{ .Release.Name }}
  image: jenkins/jenkins:lts
  service:
    labels:
      app.kubernetes.io/name: jenkins-master
      helm.sh/chart: jenkins-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: {{ .Release.Name }}
    port: 8080
    type: ClusterIP
  slaveService:
    labels:
      app.kubernetes.io/name: jenkins-master
      helm.sh/chart: jenkins-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: {{ .Release.Name }}
    port: 50000
    type: ClusterIP
  basePlugins:
  - name: configuration-as-code
    version: "1.47"
  - name: git
    version: "4.6.0"
  - name: job-dsl
    version: "1.77"
  - name: kubernetes
    version: "1.29.2"
  - name: kubernetes-credentials-provider
    version: "0.16"
  - name: workflow-aggregator
    version: "2.6"
  - name: workflow-job
    version: "2.40"
  plugins:
  - name: blueocean
    version: "1.24.5"
  - name: configuration-as-code-groovy
    version: "1.1"
  - name: disable-github-multibranch-status
    version: "1.2"
  - name: embeddable-build-status
    version: "2.0.3"
  - name: extended-read-permission
    version: "3.2"
  - name: github
    version: "1.33.1"
  - name: github-oauth
    version: "0.33"
  - name: jira
    version: "3.2"
  - name: jira-steps
    version: "1.6.0"
  - name: matrix-auth
    version: "2.6.6"
  - name: pipeline-github
    version: "2.7"
  - name: pipeline-utility-steps
    version: "2.7.1"
  - name: rebuild
    version: "1.32"
  - name: slack
    version: "2.46"
  - name: text-finder
    version: "1.15"
  - name: timestamper
    version: "1.12"
  backup:
    # Perform a backup every hour.
    interval: 3600
  env:
  - name: JAVA_OPTS
    value: "-XX:+UnlockExperimentalVMOptions
      -XX:+UseCGroupMemoryLimitForHeap
      -XX:MaxRAMFraction=1
      -Djenkins.install.runSetupWizard=false
      -Djava.awt.headless=true
      -Dhudson.security.ExtendedReadPermission=true
      -Djenkins.security.SystemReadPermission=true"
  configuration:
    secretRefName: jenkins-casc
    configurationAsCode:
    - configMapName: jenkins-casc-credentials
      content:
        casc-credentials.yaml: |
          credentials:
            system:
              domainCredentials:
              - credentials:
                - usernamePassword:
                    id: "jira"
                    description: "Jira"
                    scope: GLOBAL
                    username: "hudson"
                    password: "${JIRA_PASSWORD}"
                - usernamePassword:
                    id: "github-branch-source"
                    description: "GitHub branch source"
                    scope: GLOBAL
                    username: "${GITHUB_USER}"
                    password: "${GITHUB_TOKEN}"
                - string:
                    id: "github"
                    description: "GitHub"
                    scope: GLOBAL
                    secret: "${GITHUB_TOKEN}"
                - string:
                    id: "slack"
                    description: "Slack"
                    scope: GLOBAL
                    secret: "${SLACK_TOKEN}"
                domain:
                  description: "GitHub API"
                  name: "api.github.com"
    - configMapName: jenkins-casc-security
      content:
        casc-security.yaml: |
          security:
            scriptApproval:
              approvedSignatures:
                - staticMethod hudson.Functions printThrowable java.lang.Throwable
                - method java.util.Properties getProperty java.lang.String
    - configMapName: jenkins-casc-unclassified
      content:
        casc-unclassified.yaml: |
          unclassified:
            gitHubPluginConfig:
              configs:
              - credentialsId: {{ .Values.github.credentialsId | quote }}
                name: "nuxeo"
              hookUrl: {{ .Values.jenkins.url | quote }}
            jiraGlobalConfiguration:
              sites:
              - credentialsId: "jira"
                readTimeout: 30
                recordScmChanges: false
                supportsWikiStyleComment: true
                threadExecutorNumber: 10
                timeout: 10
                updateJiraIssueForAllStatus: true
                url: {{ .Values.jira.url | quote }}
            jiraStepsConfig:
              sites:
              - credentialsId: "jira"
                loginType: "CREDENTIAL"
                name: "Jira Nuxeo"
                readTimeout: 10000
                timeout: 10000
                url: "https://jira.nuxeo.com/"
            location:
              url: {{ .Values.jenkins.url | quote }}
            slackNotifier:
              teamDomain: "nuxeo"
              tokenCredentialId: "slack"
            timestamper:
              allPipelines: true
    - configMapName: jenkins-casc-jenkins
      content:
        casc-jenkins.yaml: |
          jenkins:
            views:
            - all:
                name: "all"
            authorizationStrategy:
              globalMatrix:
                permissions:
                - "Credentials/View:nuxeo*Developers"
                - "Job/Build:nuxeo*Developers"
                - "Job/Cancel:nuxeo*Developers"
                - "Job/Discover:nuxeo*Developers"
                - "Job/ExtendedRead:nuxeo*Developers"
                - "Job/Read:nuxeo*Developers"
                - "Job/ViewStatus:anonymous"
                - "Job/ViewStatus:authenticated"
                - "Job/Workspace:nuxeo*Developers"
                - "Lockable Resources/View:nuxeo*Developers"
                - "Metrics/HealthCheck:nuxeo*Developers"
                - "Metrics/ThreadDump:nuxeo*Developers"
                - "Metrics/View:nuxeo*Developers"
                - "Overall/Administer:jenkins-operator"
                - "Overall/Administer:nuxeo*platform"
                - "Overall/SystemRead:nuxeo*Developers"
                - "Run/Replay:nuxeo*Developers"
                - "Run/Update:nuxeo*Developers"
                - "View/Read:nuxeo*Developers"
            securityRealm:
              github:
                githubWebUri: "https://github.com"
                githubApiUri: "https://api.github.com"
                clientID: "${GITHUB_OAUTH_CLIENT_ID}"
                clientSecret: "${GITHUB_OAUTH_SECRET}"
                oauthScopes: "read:org,user:email,repo"
            crumbIssuer:
              standard:
                excludeClientIPFromCrumb: true
            disabledAdministrativeMonitors:
            - "jenkins.security.QueueItemAuthenticatorMonitor"
            globalNodeProperties:
            - envVars:
                env:
                - key: "ARENDER_DOCKER_REGISTRY"
                  value: "docker-arender.packages.nuxeo.com"
                - key: "ARENDER_HOST_DOCKER_REGISTRY"
                  value: "docker-private-arondor-host.packages.nuxeo.com"
                - key: "CONNECT_PROD_SITE_URL"
                  value: "https://connect.nuxeo.com/nuxeo/site/"
                - key: "CONNECT_PREPROD_SITE_URL"
                  value: "https://nos-preprod-connect.nuxeocloud.com/nuxeo/site/"
                - key: "DOCKER_REGISTRY"
                  value: {{ .Values.docker.registry | quote }}
                - key: "DRY_RUN"
                  value: {{ .Values.dryrun | quote }}
                - key: "PRIVATE_DOCKER_REGISTRY"
                  value: "docker-private.packages.nuxeo.com"
                - key: "PUBLIC_DOCKER_REGISTRY"
                  value: "docker.packages.nuxeo.com"
                - key: "YUM_REGISTRY"
                  value: "http://nexus.platform/repository/yum-registry/"
            clouds:
            - kubernetes:
                containerCap: 10000
                containerCapStr: "10000"
                jenkinsTunnel: "jenkins-operator-slave-master.{{ .Values.namespace }}.svc.cluster.local:50000"
                jenkinsUrl: "http://jenkins-operator-http-master.{{ .Values.namespace }}.svc.cluster.local:8080"
                name: "kubernetes"
                namespace: {{ .Values.namespace | quote }}
                podLabels:
                - key: "jenkins"
                  value: "slave"
                - key: "resource"
                  value: "pod"
                - key: "team"
                  value: "platform"
                - key: "usage"
                  value: "build"
                retentionTimeout: 15
                serverUrl: "https://kubernetes.default.svc.cluster.local:443"
                templates:
                  {{- tpl (readFile "pod-templates/jx-base.yaml.gotmpl") . | nindent 16 }}
                  {{- tpl (readFile "pod-templates/nodejs.yaml.gotmpl") . | nindent 16 }}
                  {{- tpl (readFile "pod-templates/nuxeo-platform-11.yaml.gotmpl") . | nindent 16 }}
                  {{- tpl (readFile "pod-templates/nuxeo-platform-lts-2021.yaml.gotmpl") . | nindent 16 }}
    - configMapName: jenkins-casc-jobs
      content:
        casc-jobs.yaml: |
          jobs:
          - script: >
              folder('ci')
          - script: > {{- tpl (readFile "jobs/ci/jx-platform-builders.groovy.gotmpl") . | nindent 14 }}
          - script: > {{- tpl (readFile "jobs/ci/platform-ci.groovy.gotmpl") . | nindent 14 }}
          - script: >
              folder('nuxeo')
          - script: >
              folder('nuxeo/11.x')
          - script: > {{- tpl (readFile "jobs/nuxeo/11.x/nuxeo.groovy.gotmpl") . | nindent 14 }}
          - script: >
              folder('nuxeo/lts')
          - script: > {{- tpl (readFile "jobs/nuxeo/lts/nuxeo-lts.groovy.gotmpl") . | nindent 14 }}
          - script: > {{- tpl (readFile "jobs/nuxeo/rest-api-compatibility-tests.groovy.gotmpl") . | nindent 14 }}